/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
export default function Model({ layer = 0 }) {
  const group = useRef();
  const { nodes } = useGLTF("/tree1-transformed.glb");
  const material = useMemo(() => {
    if (layer === "sa")
      return new THREE.MeshStandardMaterial({
        color: new THREE.Color("#2a2a2a"),
        roughness: 1,
        metalness: 0.9,
      });
    else
      return new THREE.MeshBasicMaterial({ color: new THREE.Color("white") });
  }, [layer]);
  return (
    <group ref={group} dispose={null}>
      <group
        rotation={[Math.PI / 2, 0, 0]}
        position={[-3, 0, -1.5]}
        scale={[0.15, 0.15, 0.15]}
      >
        <mesh
          geometry={nodes.SpookyTree_05001_1.geometry}
          material={material}
        />
        <mesh
          geometry={nodes.SpookyTree_05001_2.geometry}
          material={material}
        />
        <mesh
          geometry={nodes.SpookyTree_05001_3.geometry}
          material={material}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/tree1-transformed.glb");
